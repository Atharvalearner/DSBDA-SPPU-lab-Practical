import requests
from bs4 import BeautifulSoup

# URL of the product page
url = "https://www.amazon.com/HP-Portable-Microsoft-Quad-Core-Processor/dp/B0CPGKT77T/ref=sr_1_4?sr=8-4"

def scrape_ratings(url):
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.content, 'html.parser')
        rating = soup.find('span', class_='a-icon-alt').text.split(' ')[0]
        print("Rating:", rating)
    else:
        print("Failed to retrieve page:", response.status_code)

scrape_ratings(url)

def scrape_comments(url):
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.content, 'html.parser')
        review_containers = soup.find_all('div', class_='a-section review aok-relative')
        for review in review_containers:
            comment = review.find('span', class_='review-text').text.strip()
            print("Comment:", comment)
            print("---------------------")
    else:
        print("Failed to retrieve page:", response.status_code)

scrape_comments(url)

def scrape_tags(url):
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.content, 'html.parser')
        review_containers = soup.find_all('div', class_='a-section review aok-relative')
        for review in review_containers:
            tags = review.find_all('a', class_='a-link-normal')
            tag_list = [tag.text for tag in tags]
            print("Tags:", tag_list)
            print("---------------------")
    else:
        print("Failed to retrieve page:", response.status_code)

scrape_tags(url)

def scrape_reviews(url):
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.content, 'html.parser')
        review_containers = soup.find_all('div', class_='a-section review aok-relative')
        for review in review_containers:
            reviewer_name = review.find('span', class_='a-profile-name').text.strip()
            review_text = review.find('span', class_='review-text').text.strip()
            print("Reviewer:", reviewer_name)
            print("Review:", review_text)
            print("---------------------")
    else:
        print("Failed to retrieve page:", response.status_code)

scrape_reviews(url)

def scrape_customer_names(url):
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.content, 'html.parser')
        review_containers = soup.find_all('div', class_='a-section review aok-relative')
        for review in review_containers:
            customer_name = review.find('span', class_='a-profile-name').text.strip()
            print("Customer Name:", customer_name)
            print("---------------------")
    else:
        print("Failed to retrieve page:", response.status_code)
        
scrape_customer_names(url)

def scrape_product_info(url):
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.content, 'html.parser')
        
        # Product Title
        product_title = soup.find('span', id='productTitle')
        if product_title:
            product_title = product_title.get_text().strip()
            print("Product Title:", product_title)
        
        # Product Price
        product_price = soup.find('span', id='priceblock_ourprice')
        if product_price:
            product_price = product_price.get_text().strip()
            print("Product Price:", product_price)
        
        # Product Description
        product_description = soup.find('div', id='feature-bullets')
        if product_description:
            product_description = product_description.get_text().strip()
            print("Product Description:", product_description)
        
        # Product Image URL
        product_image_url = soup.find('img', class_='imgTagWrapper')
        if product_image_url:
            product_image_url = product_image_url.get('src')
            print("Product Image URL:", product_image_url)
        
        # Product Availability
        product_availability = soup.find('div', id='availability')
        if product_availability:
            product_availability = product_availability.get_text().strip()
            print("Product Availability:", product_availability)
    else:
        print("Failed to retrieve page:", response.status_code)

scrape_product_info(url)

def scrape_customer_ratings(url):
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.content, 'html.parser')
        review_containers = soup.find_all('div', class_='a-section review aok-relative')
        for review in review_containers:
            customer_name = review.find('span', class_='a-profile-name').text.strip()
            rating = review.find('span', class_='a-icon-alt').text.split()[0]
            print("Customer Name:", customer_name)
            print("Rating:", rating)
            print("---------------------")
    else:
        print("Failed to retrieve page:", response.status_code)

scrape_customer_ratings(url)